definitions:
  dto.UpdateEmployee:
    properties:
      company_id:
        type: integer
      department_id:
        type: integer
      name:
        type: string
      passport_number:
        type: string
      passport_type:
        type: string
      phone:
        type: string
      surname:
        type: string
    type: object
  model.Department:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  model.Employee:
    properties:
      company_id:
        type: integer
      department:
        $ref: '#/definitions/model.Department'
      name:
        type: string
      passport:
        $ref: '#/definitions/model.Passport'
      phone:
        type: string
      surname:
        type: string
    type: object
  model.Passport:
    properties:
      number:
        type: string
      type:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/employees:
    post:
      consumes:
      - application/json
      description: Create a new employee with all required information
      parameters:
      - description: Employee data
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/model.Employee'
      produces:
      - application/json
      responses:
        "201":
          description: Returns created employee ID
          schema:
            type: object
        "400":
          description: Invalid request data
          schema:
            type: string
        "404":
          description: Company not found
          schema:
            type: string
        "409":
          description: Employee or passport already exists
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new employee
      tags:
      - V1
  /api/v1/employees/{id}:
    delete:
      description: Delete employee by ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No content
        "400":
          description: Invalid employee ID
          schema:
            type: string
        "404":
          description: Employee not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete employee
      tags:
      - V1
    patch:
      consumes:
      - application/json
      description: Update existing employee data by ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated employee data
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateEmployee'
      responses:
        "204":
          description: No content
        "400":
          description: Invalid request data
          schema:
            type: string
        "404":
          description: Employee, company or department not found
          schema:
            type: string
        "409":
          description: Passport already exists
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update employee information
      tags:
      - V1
  /api/v1/employees/company/{companyID}:
    get:
      description: Retrieve all employees belonging to a specific company
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of employees
          schema:
            items:
              $ref: '#/definitions/model.Employee'
            type: array
        "400":
          description: Invalid company ID
          schema:
            type: string
        "404":
          description: Company or employees not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get employees by company ID
      tags:
      - V1
  /api/v1/employees/company/{companyID}/department/{departmentID}:
    get:
      description: Retrieve employees belonging to specific company and department
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: integer
      - description: Department ID
        in: path
        name: departmentID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of employees
          schema:
            items:
              $ref: '#/definitions/model.Employee'
            type: array
        "400":
          description: Invalid company or department ID
          schema:
            type: string
        "404":
          description: Department or employees not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get employees by company and department
      tags:
      - V1
swagger: "2.0"
